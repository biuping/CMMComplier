/* Generated By:JavaCC: Do not edit this line. CMMParseConstants.java */
package main.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CMMParseConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int SCAN = 10;
  /** RegularExpression Id. */
  int PRINT = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int REAL = 13;
  /** RegularExpression Id. */
  int BREAK = 14;
  /** RegularExpression Id. */
  int CONTINUE = 15;
  /** RegularExpression Id. */
  int FOR = 16;
  /** RegularExpression Id. */
  int CHAR = 17;
  /** RegularExpression Id. */
  int BOOL = 18;
  /** RegularExpression Id. */
  int STRING = 19;
  /** RegularExpression Id. */
  int TRUE = 20;
  /** RegularExpression Id. */
  int FALSE = 21;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 22;
  /** RegularExpression Id. */
  int REAL_LITERAL = 23;
  /** RegularExpression Id. */
  int ID = 24;
  /** RegularExpression Id. */
  int LETTER = 25;
  /** RegularExpression Id. */
  int DIGIT = 26;
  /** RegularExpression Id. */
  int STRING_LITERAL = 27;
  /** RegularExpression Id. */
  int CHAR_LITERAL = 28;
  /** RegularExpression Id. */
  int LPARENT = 29;
  /** RegularExpression Id. */
  int RPARENT = 30;
  /** RegularExpression Id. */
  int LBRACE = 31;
  /** RegularExpression Id. */
  int RBRACE = 32;
  /** RegularExpression Id. */
  int LBRACKET = 33;
  /** RegularExpression Id. */
  int RBRACKET = 34;
  /** RegularExpression Id. */
  int SEMI = 35;
  /** RegularExpression Id. */
  int COMMA = 36;
  /** RegularExpression Id. */
  int DOT = 37;
  /** RegularExpression Id. */
  int ASSIGN = 38;
  /** RegularExpression Id. */
  int GT = 39;
  /** RegularExpression Id. */
  int LT = 40;
  /** RegularExpression Id. */
  int EQ = 41;
  /** RegularExpression Id. */
  int LE = 42;
  /** RegularExpression Id. */
  int GE = 43;
  /** RegularExpression Id. */
  int UE = 44;
  /** RegularExpression Id. */
  int OR = 45;
  /** RegularExpression Id. */
  int AND = 46;
  /** RegularExpression Id. */
  int ADD = 47;
  /** RegularExpression Id. */
  int SUB = 48;
  /** RegularExpression Id. */
  int MUL = 49;
  /** RegularExpression Id. */
  int DIVIDE = 50;
  /** RegularExpression Id. */
  int BIT_AND = 51;
  /** RegularExpression Id. */
  int BIT_OR = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"scan\"",
    "\"print\"",
    "\"int\"",
    "\"real\"",
    "\"break\"",
    "\"continue\"",
    "\"for\"",
    "\"char\"",
    "\"bool\"",
    "\"string\"",
    "\"true\"",
    "\"false\"",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING_LITERAL>",
    "<CHAR_LITERAL>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"<>\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
  };

}
